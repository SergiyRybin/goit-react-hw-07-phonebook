{"ast":null,"code":"import ContactCard from\"components/ContactCard/ContactCard\";import React from\"react\";import{useSelector}from\"react-redux\";import{useGetContactsQuery}from\"redux/slice\";import{jsx as _jsx}from\"react/jsx-runtime\";function ContactList(){var _useGetContactsQuery=useGetContactsQuery(),data=_useGetContactsQuery.data;var filterValue=useSelector(function(state){return state.filter.filter;});var response=data===null||data===void 0?void 0:data.filter(function(_ref){var name=_ref.name;return name.toLowerCase().startsWith(filterValue.toLowerCase());});return/*#__PURE__*/_jsx(\"ul\",{children:response&&response.map(function(contact,index){return/*#__PURE__*/_jsx(ContactCard,{contact:contact},index);})});}export default ContactList;","map":{"version":3,"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/components/ContactList/ContactList.jsx"],"names":["ContactCard","React","useSelector","useGetContactsQuery","ContactList","data","filterValue","state","filter","response","name","toLowerCase","startsWith","map","contact","index"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,oCAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,mBAAT,KAAoC,aAApC,C,2CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB,yBAAiBD,mBAAmB,EAApC,CAAQE,IAAR,sBAAQA,IAAR,CAEA,GAAMC,CAAAA,WAAW,CAAGJ,WAAW,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAN,CAAaA,MAAxB,EAAD,CAA/B,CAEA,GAAMC,CAAAA,QAAQ,CAAGJ,IAAH,SAAGA,IAAH,iBAAGA,IAAI,CAAEG,MAAN,CAAa,kBAAGE,CAAAA,IAAH,MAAGA,IAAH,OAC5BA,CAAAA,IAAI,CAACC,WAAL,GAAmBC,UAAnB,CAA8BN,WAAW,CAACK,WAAZ,EAA9B,CAD4B,EAAb,CAAjB,CAIA,mBACE,oBACGF,QAAQ,EACPA,QAAQ,CAACI,GAAT,CAAa,SAACC,OAAD,CAAUC,KAAV,qBACX,KAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EAAoCC,KAApC,CADW,EAAb,CAFJ,EADF,CAQD,CAED,cAAeX,CAAAA,WAAf","sourcesContent":["import ContactCard from \"components/ContactCard/ContactCard\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useGetContactsQuery } from \"redux/slice\";\n\nfunction ContactList() {\n  const { data } = useGetContactsQuery();\n\n  const filterValue = useSelector((state) => state.filter.filter);\n\n  const response = data?.filter(({ name }) =>\n    name.toLowerCase().startsWith(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {response &&\n        response.map((contact, index) => (\n          <ContactCard contact={contact} key={index} />\n        ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}