{"ast":null,"code":"import _asyncToGenerator from\"/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/node_modules/@babel/runtime/regenerator/index.js\";import{createSlice}from\"@reduxjs/toolkit\";import{createApi}from\"@reduxjs/toolkit/query/react\";import axios from\"axios\";export var mySlice=createSlice({name:\"myValue\",initialState:{filter:\"\"},reducers:{filterContact:function filterContact(state,action){state.filter=action.payload;}}});var filterContact=mySlice.actions.filterContact;export{filterContact};var axiosBaseQuery=function axiosBaseQuery(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{baseUrl:\"\"},baseUrl=_ref.baseUrl;return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var url,method,data,params,result,_err$response,_err$response2,err;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=_ref2.url,method=_ref2.method,data=_ref2.data,params=_ref2.params;_context.prev=1;_context.next=4;return axios({url:baseUrl+url,method:method,data:data,params:params});case 4:result=_context.sent;return _context.abrupt(\"return\",{data:result.data});case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);err=_context.t0;return _context.abrupt(\"return\",{error:{status:(_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status,data:((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data)||err.message}});case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref3.apply(this,arguments);};}();};export var contactsApi=createApi({reducerPath:\"contacts\",baseQuery:axiosBaseQuery({baseUrl:\"https://62d82adc9c8b5185c7846b84.mockapi.io\"}),tagTypes:[\"Contacts\"],endpoints:function endpoints(builder){return{getContacts:builder.query({query:function query(){return{url:\"/contacts\",method:\"GET\"};},providesTags:[\"Contacts\"]}),addContact:builder.mutation({query:function query(value){return{url:\"/contacts\",method:\"POST\",body:value};},invalidatesTags:[\"Contacts\"]}),delContact:builder.mutation({query:function query(id){return{url:\"/contacts/\".concat(id),method:\"DELETE\"};},invalidatesTags:[\"Contacts\"]})};}});var useGetContactsQuery=contactsApi.useGetContactsQuery,useAddContactMutation=contactsApi.useAddContactMutation,useDelContactMutation=contactsApi.useDelContactMutation;export{useGetContactsQuery,useAddContactMutation,useDelContactMutation};","map":{"version":3,"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/redux/slice.jsx"],"names":["createSlice","createApi","axios","mySlice","name","initialState","filter","reducers","filterContact","state","action","payload","actions","axiosBaseQuery","baseUrl","url","method","data","params","result","err","error","status","response","message","contactsApi","reducerPath","baseQuery","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","value","body","invalidatesTags","delContact","id","useGetContactsQuery","useAddContactMutation","useDelContactMutation"],"mappings":"mSAAA,OAASA,WAAT,KAA4B,kBAA5B,CACA,OAASC,SAAT,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,IAAMC,CAAAA,OAAO,CAAGH,WAAW,CAAC,CACjCI,IAAI,CAAE,SAD2B,CAEjCC,YAAY,CAAE,CACZC,MAAM,CAAE,EADI,CAFmB,CAKjCC,QAAQ,CAAE,CACRC,aADQ,wBACMC,KADN,CACaC,MADb,CACqB,CAC3BD,KAAK,CAACH,MAAN,CAAeI,MAAM,CAACC,OAAtB,CACD,CAHO,CALuB,CAAD,CAA3B,CAYA,GAAQH,CAAAA,aAAR,CAA0BL,OAAO,CAACS,OAAlC,CAAQJ,aAAR,C,sBAEP,GAAMK,CAAAA,cAAc,CAClB,QADIA,CAAAA,cACJ,sEAAe,CAAEC,OAAO,CAAE,EAAX,CAAf,CAAGA,OAAH,MAAGA,OAAH,iGACA,2MAASC,GAAT,OAASA,GAAT,CAAcC,MAAd,OAAcA,MAAd,CAAsBC,IAAtB,OAAsBA,IAAtB,CAA4BC,MAA5B,OAA4BA,MAA5B,uCAEyBhB,CAAAA,KAAK,CAAC,CAAEa,GAAG,CAAED,OAAO,CAAGC,GAAjB,CAAsBC,MAAM,CAANA,MAAtB,CAA8BC,IAAI,CAAJA,IAA9B,CAAoCC,MAAM,CAANA,MAApC,CAAD,CAF9B,QAEUC,MAFV,+CAGW,CAAEF,IAAI,CAAEE,MAAM,CAACF,IAAf,CAHX,0DAKQG,GALR,6CAMW,CACLC,KAAK,CAAE,CACLC,MAAM,gBAAEF,GAAG,CAACG,QAAN,wCAAE,cAAcD,MADjB,CAELL,IAAI,CAAE,iBAAAG,GAAG,CAACG,QAAJ,wDAAcN,IAAd,GAAsBG,GAAG,CAACI,OAF3B,CADF,CANX,sEADA,iEADF,CAiBA,MAAO,IAAMC,CAAAA,WAAW,CAAGxB,SAAS,CAAC,CACnCyB,WAAW,CAAE,UADsB,CAEnCC,SAAS,CAAEd,cAAc,CAAC,CACxBC,OAAO,CAAE,6CADe,CAAD,CAFU,CAKnCc,QAAQ,CAAE,CAAC,UAAD,CALyB,CAMnCC,SAAS,CAAE,mBAACC,OAAD,QAAc,CACvBC,WAAW,CAAED,OAAO,CAACE,KAAR,CAAc,CACzBA,KAAK,CAAE,uBAAO,CAAEjB,GAAG,CAAE,WAAP,CAAoBC,MAAM,CAAE,KAA5B,CAAP,EADkB,CAEzBiB,YAAY,CAAE,CAAC,UAAD,CAFW,CAAd,CADU,CAKvBC,UAAU,CAAEJ,OAAO,CAACK,QAAR,CAAiB,CAC3BH,KAAK,CAAE,eAACI,KAAD,QAAY,CACjBrB,GAAG,CAAE,WADY,CAEjBC,MAAM,CAAE,MAFS,CAGjBqB,IAAI,CAAED,KAHW,CAAZ,EADoB,CAM3BE,eAAe,CAAE,CAAC,UAAD,CANU,CAAjB,CALW,CAavBC,UAAU,CAAET,OAAO,CAACK,QAAR,CAAiB,CAC3BH,KAAK,CAAE,eAACQ,EAAD,QAAS,CACdzB,GAAG,qBAAeyB,EAAf,CADW,CAEdxB,MAAM,CAAE,QAFM,CAAT,EADoB,CAK3BsB,eAAe,CAAE,CAAC,UAAD,CALU,CAAjB,CAbW,CAAd,EANwB,CAAD,CAA7B,CA6BA,GACLG,CAAAA,mBADK,CAIHhB,WAJG,CACLgB,mBADK,CAELC,qBAFK,CAIHjB,WAJG,CAELiB,qBAFK,CAGLC,qBAHK,CAIHlB,WAJG,CAGLkB,qBAHK,C","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { createApi } from \"@reduxjs/toolkit/query/react\";\nimport axios from \"axios\";\nexport const mySlice = createSlice({\n  name: \"myValue\",\n  initialState: {\n    filter: \"\",\n  },\n  reducers: {\n    filterContact(state, action) {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const { filterContact } = mySlice.actions;\n\nconst axiosBaseQuery =\n  ({ baseUrl } = { baseUrl: \"\" }) =>\n  async ({ url, method, data, params }) => {\n    try {\n      const result = await axios({ url: baseUrl + url, method, data, params });\n      return { data: result.data };\n    } catch (axiosError) {\n      let err = axiosError;\n      return {\n        error: {\n          status: err.response?.status,\n          data: err.response?.data || err.message,\n        },\n      };\n    }\n  };\n\nexport const contactsApi = createApi({\n  reducerPath: \"contacts\",\n  baseQuery: axiosBaseQuery({\n    baseUrl: \"https://62d82adc9c8b5185c7846b84.mockapi.io\",\n  }),\n  tagTypes: [\"Contacts\"],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => ({ url: \"/contacts\", method: \"GET\" }),\n      providesTags: [\"Contacts\"],\n    }),\n    addContact: builder.mutation({\n      query: (value) => ({\n        url: \"/contacts\",\n        method: \"POST\",\n        body: value,\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n    delContact: builder.mutation({\n      query: (id) => ({\n        url: `/contacts/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDelContactMutation,\n} = contactsApi;\n"]},"metadata":{},"sourceType":"module"}