{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts } from \"service/fetchcontact\";\nexport const mySlice = createSlice({\n  name: 'myValue',\n  initialState: {\n    contacts: {\n      items: [],\n      filter: ''\n    }\n  },\n  extraReducers: {\n    // addContact(state, action) {\n    // state.contacts.items.push(\n    [fetchContacts.fulfilled]: (state, action) => {\n      state.contacts.items.push(action.payload);\n    } // action.payload\n    // );\n    // },\n    // removeContact(state, action) {\n    //   const remove = state.contacts.items.filter(\n    //     contact => contact.name !== action.payload\n    //   );\n    //   localStorage.setItem('contacts', JSON.stringify(remove));\n    //   state.contacts.items = remove;\n    // },\n    // filterContact(state, action) {\n    //   state.contacts.filter = action.payload;\n    // },\n\n  }\n});\nexport const {\n  addContact\n} = mySlice.actions;\nexport const {\n  removeContact\n} = mySlice.actions;\nexport const {\n  filterContact\n} = mySlice.actions;\nexport const contactValue = state => state.myValue.contacts.items;\nexport const filterValue = state => state.myValue.contacts.filter;","map":{"version":3,"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/redux/slice.jsx"],"names":["createSlice","fetchContacts","mySlice","name","initialState","contacts","items","filter","extraReducers","fulfilled","state","action","push","payload","addContact","actions","removeContact","filterContact","contactValue","myValue","filterValue"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,OAAO,MAAMC,OAAO,GAAGF,WAAW,CAAC;AACjCG,EAAAA,IAAI,EAAE,SAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,EADC;AAERC,MAAAA,MAAM,EAAE;AAFA;AADE,GAFmB;AASjCC,EAAAA,aAAa,EAAE;AACb;AACE;AACC,KAACP,aAAa,CAACQ,SAAf,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAEzCD,MAAAA,KAAK,CAACL,QAAN,CAAeC,KAAf,CAAqBM,IAArB,CAA2BD,MAAM,CAACE,OAAlC;AAIF,KATS,CAUT;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtBa;AATkB,CAAD,CAA3B;AAmCP,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAiBZ,OAAO,CAACa,OAA/B;AAEP,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAoBd,OAAO,CAACa,OAAlC;AAEP,OAAO,MAAM;AAAEE,EAAAA;AAAF,IAAoBf,OAAO,CAACa,OAAlC;AAEP,OAAO,MAAMG,YAAY,GAAGR,KAAK,IAAIA,KAAK,CAACS,OAAN,CAAcd,QAAd,CAAuBC,KAArD;AAEP,OAAO,MAAMc,WAAW,GAAGV,KAAK,IAAIA,KAAK,CAACS,OAAN,CAAcd,QAAd,CAAuBE,MAApD","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts } from \"service/fetchcontact\";\n\nexport const mySlice = createSlice({\n  name: 'myValue',\n  initialState: {\n    contacts: {\n      items: [],\n      filter: '',\n    },\n  },\n\n  extraReducers: {\n    // addContact(state, action) {\n      // state.contacts.items.push(\n       [fetchContacts.fulfilled]: (state, action)=>{\n   \n          state.contacts.items.push( action.payload\n         );\n\n        \n       }\n        // action.payload\n        // );\n    // },\n    // removeContact(state, action) {\n    //   const remove = state.contacts.items.filter(\n    //     contact => contact.name !== action.payload\n    //   );\n    //   localStorage.setItem('contacts', JSON.stringify(remove));\n    //   state.contacts.items = remove;\n    // },\n    // filterContact(state, action) {\n    //   state.contacts.filter = action.payload;\n    // },\n  },\n});\n\nexport const { addContact } = mySlice.actions;\n\nexport const { removeContact } = mySlice.actions;\n\nexport const { filterContact } = mySlice.actions;\n\nexport const contactValue = state => state.myValue.contacts.items;\n\nexport const filterValue = state => state.myValue.contacts.filter;\n"]},"metadata":{},"sourceType":"module"}