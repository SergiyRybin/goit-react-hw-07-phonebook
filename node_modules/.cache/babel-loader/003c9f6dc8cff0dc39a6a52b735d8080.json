{"ast":null,"code":"import { fetchContacts } from 'service/fetchcontact';\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { mySlice } from './slice';\nimport { getPersistConfig } from 'redux-deep-persist';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst rootReducer = combineReducers({\n  myValue: mySlice.reducer\n});\nconst persistConfig = getPersistConfig({\n  key: 'contacts',\n  storage,\n  blacklist: ['myValue.contacts.filter'],\n  rootReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  // reducer: persistedReducer,\n  reducer: {\n    [fetchContacts.reducerPath]: fetchContacts.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/redux/store.jsx"],"names":["fetchContacts","configureStore","combineReducers","mySlice","getPersistConfig","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","rootReducer","myValue","reducer","persistConfig","key","blacklist","persistedReducer","store","reducerPath","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AACA,SAASA,aAAT,QAA8B,sBAA9B;AAGA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAWA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,WAAW,GAAGZ,eAAe,CAAC;AAClCa,EAAAA,OAAO,EAAEZ,OAAO,CAACa;AADiB,CAAD,CAAnC;AAIA,MAAMC,aAAa,GAAGb,gBAAgB,CAAC;AACrCc,EAAAA,GAAG,EAAE,UADgC;AAErCL,EAAAA,OAFqC;AAGrCM,EAAAA,SAAS,EAAE,CAAC,yBAAD,CAH0B;AAIrCL,EAAAA;AAJqC,CAAD,CAAtC;AAOA,MAAMM,gBAAgB,GAAGd,cAAc,CAACW,aAAD,EAAgBH,WAAhB,CAAvC;AAEA,OAAO,MAAMO,KAAK,GAAGpB,cAAc,CAAC;AAClC;AACAe,EAAAA,OAAO,EAAE;AACX,KAAChB,aAAa,CAACsB,WAAf,GAA6BtB,aAAa,CAACgB;AADhC,GAFyB;AAKlCO,EAAAA,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AANY,CAAD,CAA5B;AAaP,OAAO,MAAMe,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA9B","sourcesContent":["\nimport { fetchContacts } from 'service/fetchcontact';\n\n\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { mySlice } from './slice';\nimport { getPersistConfig } from 'redux-deep-persist';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nconst rootReducer = combineReducers({\n  myValue: mySlice.reducer,\n});\n\nconst persistConfig = getPersistConfig({\n  key: 'contacts',\n  storage,\n  blacklist: ['myValue.contacts.filter'],\n  rootReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  // reducer: persistedReducer,\n  reducer: {\n[fetchContacts.reducerPath]: fetchContacts.reducer\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}