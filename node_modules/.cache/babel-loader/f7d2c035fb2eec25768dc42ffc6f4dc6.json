{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const mySlice = createSlice({\n  name: \"myValue\",\n  initialState: {\n    filter: ''\n  },\n  reducers: {\n    //   addContact(state, action) {\n    //     state.contacts.items.push(action.payload);\n    //   },\n    // },\n    // removeContact(state, action) {\n    //   const remove = state.contacts.items.filter(\n    //     (contact) => contact.name !== action.payload\n    //   );\n    //   localStorage.setItem(\"contacts\", JSON.stringify(remove));\n    //   state.contacts.items = remove;\n    // },\n    filterContact(state, action) {\n      state.filter = action.payload;\n    }\n\n  }\n}); // export const { addContact } = mySlice.actions;\n// export const { removeContact } = mySlice.actions;\n\nexport const {\n  filterContact\n} = mySlice.actions; // // export const contactValue = (state) => state.myValue.contacts.items;\n// // export const filterValue = (state) => state.myValue.contacts.filter;\n\nexport const contactsApi = createApi({\n  reducerPath: \"contacts\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://62d82adc9c8b5185c7846b84.mockapi.io\"\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => \"/contacts\",\n      providesTags: ['Contacts']\n    }),\n    addContact: builder.mutation({\n      qu\n    })\n  })\n});\nexport const {\n  useGetContactsQuery\n} = contactsApi;","map":{"version":3,"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/redux/slice.jsx"],"names":["createSlice","createApi","fetchBaseQuery","mySlice","name","initialState","filter","reducers","filterContact","state","action","payload","actions","contactsApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","qu","useGetContactsQuery"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,OAAO,GAAGH,WAAW,CAAC;AACjCI,EAAAA,IAAI,EAAE,SAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE;AADI,GAFmB;AAMjCC,EAAAA,QAAQ,EAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3BD,MAAAA,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACC,OAAtB;AACD;;AAfS;AANuB,CAAD,CAA3B,C,CAwBP;AAEA;;AAEA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAoBL,OAAO,CAACS,OAAlC,C,CAEP;AAEA;;AAEA,OAAO,MAAMC,WAAW,GAAGZ,SAAS,CAAC;AACnCa,EAAAA,WAAW,EAAE,UADsB;AAEnCC,EAAAA,SAAS,EAAEb,cAAc,CAAC;AACxBc,IAAAA,OAAO,EAAE;AADe,GAAD,CAFU;AAKnCC,EAAAA,QAAQ,EAAE,CAAC,UAAD,CALyB;AAMnCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,WAAW,EAAED,OAAO,CAACE,KAAR,CAAc;AACzBA,MAAAA,KAAK,EAAE,MAAM,WADY;AAEzBC,MAAAA,YAAY,EAAE,CAAC,UAAD;AAFW,KAAd,CADU;AAKvBC,IAAAA,UAAU,EAAEJ,OAAO,CAACK,QAAR,CAAiB;AAC3BC,MAAAA;AAD2B,KAAjB;AALW,GAAd;AANwB,CAAD,CAA7B;AAiBP,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAA0Bb,WAAhC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const mySlice = createSlice({\n  name: \"myValue\",\n  initialState: {\n    filter: '',\n  },\n\n  reducers: {\n  //   addContact(state, action) {\n  //     state.contacts.items.push(action.payload);\n  //   },\n  // },\n  // removeContact(state, action) {\n  //   const remove = state.contacts.items.filter(\n  //     (contact) => contact.name !== action.payload\n  //   );\n  //   localStorage.setItem(\"contacts\", JSON.stringify(remove));\n  //   state.contacts.items = remove;\n  // },\n\n  filterContact(state, action) {\n    state.filter = action.payload;\n  }},\n});\n\n// export const { addContact } = mySlice.actions;\n\n// export const { removeContact } = mySlice.actions;\n\nexport const { filterContact } = mySlice.actions;\n\n// // export const contactValue = (state) => state.myValue.contacts.items;\n\n// // export const filterValue = (state) => state.myValue.contacts.filter;\n\nexport const contactsApi = createApi({\n  reducerPath: \"contacts\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://62d82adc9c8b5185c7846b84.mockapi.io\",\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => \"/contacts\",\n      providesTags: ['Contacts']\n    }),\n    addContact: builder.mutation({\n      qu\n    })\n  }),\n});\n\nexport const { useGetContactsQuery } = contactsApi;\n"]},"metadata":{},"sourceType":"module"}