{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n// export const mySlice = createSlice({\n//   name: \"myValue\",\n//   initialState: {\n//     contacts: {\n//       items: [],\n//       filter: \"\",\n//     },\n//   },\n//   reducers: {\n//     addContact(state, action) {\n//       state.contacts.items.push(action.payload);\n//     },\n//   },\n//   removeContact(state, action) {\n//     const remove = state.contacts.items.filter(\n//       (contact) => contact.name !== action.payload\n//     );\n//     localStorage.setItem(\"contacts\", JSON.stringify(remove));\n//     state.contacts.items = remove;\n//   },\n//   filterContact(state, action) {\n//     state.contacts.filter = action.payload;\n//   },\n// });\n// export const { addContact } = mySlice.actions;\n// export const { removeContact } = mySlice.actions;\n// export const { filterContact } = mySlice.actions;\n// // export const contactValue = (state) => state.myValue.contacts.items;\n// // export const filterValue = (state) => state.myValue.contacts.filter;\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const contactsApi = createApi({\n  reducerPath: \"contacts\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://62d82adc9c8b5185c7846b84.mockapi.io'\n  }),\n  // tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => \"/contacts\" // providesTags: ['Contacts']\n\n    })\n  })\n});\nexport const {\n  useGetContactsQuery\n} = contactsApi;","map":{"version":3,"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/redux/slice.jsx"],"names":["createApi","fetchBaseQuery","contactsApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getContacts","query","useGetContactsQuery"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;AACnCG,EAAAA,WAAW,EAAE,UADsB;AAEnCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AACxBI,IAAAA,OAAO,EAAE;AADe,GAAD,CAFU;AAKnC;AACAC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,WAAW,EAAED,OAAO,CAACE,KAAR,CAAc;AACzBA,MAAAA,KAAK,EAAE,MAAM,WADY,CAEzB;;AAFyB,KAAd;AADU,GAAd;AANwB,CAAD,CAA7B;AAcP,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAyBR,WAA/B","sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\n\n// export const mySlice = createSlice({\n//   name: \"myValue\",\n//   initialState: {\n//     contacts: {\n//       items: [],\n//       filter: \"\",\n//     },\n//   },\n\n//   reducers: {\n//     addContact(state, action) {\n//       state.contacts.items.push(action.payload);\n//     },\n//   },\n//   removeContact(state, action) {\n//     const remove = state.contacts.items.filter(\n//       (contact) => contact.name !== action.payload\n//     );\n//     localStorage.setItem(\"contacts\", JSON.stringify(remove));\n//     state.contacts.items = remove;\n//   },\n//   filterContact(state, action) {\n//     state.contacts.filter = action.payload;\n//   },\n// });\n\n// export const { addContact } = mySlice.actions;\n\n// export const { removeContact } = mySlice.actions;\n\n// export const { filterContact } = mySlice.actions;\n\n// // export const contactValue = (state) => state.myValue.contacts.items;\n\n// // export const filterValue = (state) => state.myValue.contacts.filter;\n\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactsApi = createApi({\n  reducerPath: \"contacts\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://62d82adc9c8b5185c7846b84.mockapi.io',\n  }),\n  // tagTypes: ['Contacts'],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => \"/contacts\",\n      // providesTags: ['Contacts']\n    }),\n  }),\n});\n\nexport const { useGetContactsQuery} = contactsApi;\n"]},"metadata":{},"sourceType":"module"}