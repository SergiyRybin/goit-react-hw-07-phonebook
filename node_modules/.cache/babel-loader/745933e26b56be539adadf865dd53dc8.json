{"ast":null,"code":"var _jsxFileName = \"/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm .jsx\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactValue, addContact, useAddContactMutation, useGetContactsQuery } from \"redux/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm() {\n  _s();\n\n  const [addContact, result] = useAddContactMutation();\n  const {\n    data,\n    error,\n    isLoading\n  } = useGetContactsQuery();\n  console.log(data);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      number\n    } = e.currentTarget.elements;\n\n    if (data) {\n      const nameAdd = data.map(el => el.name); // if (data.name.find((el) => el.toLowerCase() === name.value.toLowerCase())) {\n      //   e.currentTarget.reset();\n      //   return alert(`${name.value} is already in contacts`);\n      // }\n    }\n\n    addContact({\n      name: name.value,\n      number: number.value,\n      id: nanoid(5)\n    });\n    e.currentTarget.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"WbrZK6yXu7lhfGN1hq2Evq0/UVA=\", false, function () {\n  return [useAddContactMutation, useGetContactsQuery];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm .jsx"],"names":["nanoid","useDispatch","useSelector","contactValue","addContact","useAddContactMutation","useGetContactsQuery","ContactForm","result","data","error","isLoading","console","log","handleSubmit","e","preventDefault","name","number","currentTarget","elements","nameAdd","map","el","value","id","reset"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,YADF,EAEEC,UAFF,EAGEC,qBAHF,EAIEC,mBAJF,QAKO,aALP;;;AAOA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACH,UAAD,EAAaI,MAAb,IAAuBH,qBAAqB,EAAlD;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA6BL,mBAAmB,EAAtD;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmBH,CAAC,CAACI,aAAF,CAAgBC,QAAzC;;AACA,QAAIX,IAAJ,EAAU;AACR,YAAMY,OAAO,GAAGZ,IAAI,CAACa,GAAL,CAASC,EAAE,IAAGA,EAAE,CAACN,IAAjB,CAAhB,CADQ,CAER;AACA;AACA;AACA;AACD;;AAEDb,IAAAA,UAAU,CAAC;AAAEa,MAAAA,IAAI,EAAEA,IAAI,CAACO,KAAb;AAAoBN,MAAAA,MAAM,EAAEA,MAAM,CAACM,KAAnC;AAA0CC,MAAAA,EAAE,EAAEzB,MAAM,CAAC,CAAD;AAApD,KAAD,CAAV;AAEAe,IAAAA,CAAC,CAACI,aAAF,CAAgBO,KAAhB;AACD,GAfD;;AAiBA,sBACE;AAAM,IAAA,QAAQ,EAAEZ,YAAhB;AAAA,4BACE;AAAA,sCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAC,wHAHV;AAIE,QAAA,KAAK,EAAC,wIAJR;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,wCAEE;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAC,wFAHV;AAIE,QAAA,KAAK,EAAC,8FAJR;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA/CQP,W;UACsBF,qB,EACMC,mB;;;KAF5BC,W;AAiDT,eAAeA,WAAf","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  contactValue,\n  addContact,\n  useAddContactMutation,\n  useGetContactsQuery,\n} from \"redux/slice\";\n\nfunction ContactForm() {\n  const [addContact, result] = useAddContactMutation();\n  const { data, error, isLoading } = useGetContactsQuery();\n\n  console.log(data);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = e.currentTarget.elements;\n    if (data) {\n      const nameAdd = data.map(el=> el.name)\n      // if (data.name.find((el) => el.toLowerCase() === name.value.toLowerCase())) {\n      //   e.currentTarget.reset();\n      //   return alert(`${name.value} is already in contacts`);\n      // }\n    }\n\n    addContact({ name: name.value, number: number.value, id: nanoid(5) });\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}