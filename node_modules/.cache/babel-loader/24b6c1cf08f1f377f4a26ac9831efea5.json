{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigType = void 0;\nvar ConfigType;\n\n(function (ConfigType) {\n  ConfigType[ConfigType[\"WHITELIST\"] = 0] = \"WHITELIST\";\n  ConfigType[ConfigType[\"BLACKLIST\"] = 1] = \"BLACKLIST\";\n})(ConfigType = exports.ConfigType || (exports.ConfigType = {}));","map":{"version":3,"mappings":";;;;;;AAkHA,IAAYA,UAAZ;;AAAA,WAAYA,UAAZ,EAAsB;AAClBA;AACAA;AACH,CAHD,EAAYA,UAAU,GAAVC,4CAAU,EAAV,CAAZ","names":["ConfigType","exports"],"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/node_modules/redux-deep-persist/src/types.ts"],"sourcesContent":["/**\n * Types taken from Redux\n */\n\n/**\n * @link https://github.com/reduxjs/redux/blob/master/src/types/actions.ts\n */\nexport interface AnyAction extends Action {\n    [extraProps: string]: any;\n}\n\n/**\n * @template T the type of the action's `type` tag.\n * @link https://github.com/reduxjs/redux/blob/master/src/types/actions.ts\n */\nexport interface Action<T = any> {\n    type: T;\n}\n\n/**\n * @template S The type of state consumed and produced by this reducer.\n * @template A The type of actions the reducer can potentially respond to.\n * @link https://github.com/reduxjs/redux/blob/master/src/types/reducers.ts\n */\nexport type Reducer<S = any, A extends Action = AnyAction> = (state: S | undefined, action: A) => S;\n\n/**\n * Types taken from redux-persist\n * @link https://github.com/rt2zz/redux-persist/blob/master/types/types.d.ts\n */\n\nexport interface Storage {\n    getItem(key: string, ...args: Array<any>): any;\n    setItem(key: string, value: any, ...args: Array<any>): any;\n    removeItem(key: string, ...args: Array<any>): any;\n}\n\nexport interface PersistState {\n    version: number;\n    rehydrated: boolean;\n}\n\nexport type PersistedState =\n    | {\n          _persist: PersistState;\n      }\n    | undefined;\n\nexport type PersistMigrate = (state: PersistedState, currentVersion: number) => Promise<PersistedState>;\n\n/**\n * @desc\n * `SS` means SubState\n * `ESS` means EndSubState\n * `S` means State\n */\nexport type TransformInbound<SS, ESS, S = any> = (subState: SS, key: keyof S, state: S) => ESS;\n\n/**\n * @desc\n * `SS` means SubState\n * `HSS` means HydratedSubState\n * `RS` means RawState\n */\nexport type TransformOutbound<SS, HSS, RS = any> = (state: SS, key: keyof RS, rawState: RS) => HSS;\n\nexport interface Transform<HSS, ESS, S = any, RS = any> {\n    in: TransformInbound<HSS, ESS, S>;\n    out: TransformOutbound<ESS, HSS, RS>;\n    deepPersistKey?: string;\n}\n\nexport type Transforms<HSS, ESS, S, RS> = Array<Transform<HSS, ESS, S, RS>>;\n\n/**\n * @desc\n * `S` means State\n * `RS` means RawState\n * `HSS` means HydratedSubState\n * `ESS` means EndSubState\n */\nexport interface PersistConfig<S, RS = any, HSS = any, ESS = any> {\n    version?: number;\n    storage: Storage;\n    key: string;\n    /**\n     * @deprecated keyPrefix is going to be removed in v6.\n     */\n    keyPrefix?: string;\n    blacklist?: Array<string>;\n    whitelist?: Array<string>;\n    transforms?: Array<Transform<HSS, ESS, S, RS>>;\n    throttle?: number;\n    migrate?: PersistMigrate;\n    stateReconciler?: false | StateReconciler<S>;\n    /**\n     * @desc Used for migrations.\n     */\n    getStoredState?: (config: PersistConfig<S, RS, HSS, ESS>) => Promise<PersistedState>;\n    debug?: boolean;\n    serialize?: boolean;\n    timeout?: number;\n    writeFailHandler?: (err: Error) => void;\n}\n\nexport type StateReconciler<S> = (inboundState: any, state: S, reducedState: S, config: PersistConfig<S>) => S;\n\n/**\n * Types used in redux deep persist core and utils\n */\n\nexport type TObject = Record<any, any>;\nexport type RootKeysGroup = { [key: string]: string[] | undefined };\n\nexport enum ConfigType {\n    WHITELIST,\n    BLACKLIST,\n}\n\nexport interface GetPersistConfigArgs<S> extends Omit<PersistConfig<S>, 'stateReconciler'> {\n    rootReducer: Reducer<S>;\n}\n"]},"metadata":{},"sourceType":"script"}