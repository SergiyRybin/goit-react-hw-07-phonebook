{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const mySlice = createSlice({\n  name: 'myValue',\n  initialState: {\n    contacts: {\n      items: [],\n      filter: ''\n    }\n  },\n  reducers: {\n    addContact(state, action) {\n      state.contacts.items.push(action.payload);\n    },\n\n    removeContact(state, action) {\n      const remove = state.contacts.items.filter(contact => contact.name !== action.payload);\n      localStorage.setItem('contacts', JSON.stringify(remove));\n      state.contacts.items = remove;\n    },\n\n    filterContact(state, action) {\n      state.contacts.filter = action.payload;\n    }\n\n  }\n});\nexport const {\n  addContact\n} = mySlice.actions;\nexport const {\n  removeContact\n} = mySlice.actions;\nexport const {\n  filterContact\n} = mySlice.actions;\nexport const contactValue = state => state.myValue.contacts.items;\nexport const filterValue = state => state.myValue.contacts.filter;","map":{"version":3,"sources":["/Users/sergiyrybin/Documents/IT/goit-react-hw-07-phonebook/src/redux/slice.jsx"],"names":["createSlice","mySlice","name","initialState","contacts","items","filter","reducers","addContact","state","action","push","payload","removeContact","remove","contact","localStorage","setItem","JSON","stringify","filterContact","actions","contactValue","myValue","filterValue"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,OAAO,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAE,SAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,EADC;AAERC,MAAAA,MAAM,EAAE;AAFA;AADE,GAFmB;AASjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACL,QAAN,CAAeC,KAAf,CAAqBM,IAArB,CAA0BD,MAAM,CAACE,OAAjC;AACD,KAHO;;AAIRC,IAAAA,aAAa,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMI,MAAM,GAAGL,KAAK,CAACL,QAAN,CAAeC,KAAf,CAAqBC,MAArB,CACbS,OAAO,IAAIA,OAAO,CAACb,IAAR,KAAiBQ,MAAM,CAACE,OADtB,CAAf;AAGAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAjC;AACAL,MAAAA,KAAK,CAACL,QAAN,CAAeC,KAAf,GAAuBS,MAAvB;AACD,KAVO;;AAWRM,IAAAA,aAAa,CAACX,KAAD,EAAQC,MAAR,EAAgB;AAC3BD,MAAAA,KAAK,CAACL,QAAN,CAAeE,MAAf,GAAwBI,MAAM,CAACE,OAA/B;AACD;;AAbO;AATuB,CAAD,CAA3B;AA0BP,OAAO,MAAM;AAAEJ,EAAAA;AAAF,IAAiBP,OAAO,CAACoB,OAA/B;AAEP,OAAO,MAAM;AAAER,EAAAA;AAAF,IAAoBZ,OAAO,CAACoB,OAAlC;AAEP,OAAO,MAAM;AAAED,EAAAA;AAAF,IAAoBnB,OAAO,CAACoB,OAAlC;AAEP,OAAO,MAAMC,YAAY,GAAGb,KAAK,IAAIA,KAAK,CAACc,OAAN,CAAcnB,QAAd,CAAuBC,KAArD;AAEP,OAAO,MAAMmB,WAAW,GAAGf,KAAK,IAAIA,KAAK,CAACc,OAAN,CAAcnB,QAAd,CAAuBE,MAApD","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const mySlice = createSlice({\n  name: 'myValue',\n  initialState: {\n    contacts: {\n      items: [],\n      filter: '',\n    },\n  },\n\n  reducers: {\n    addContact(state, action) {\n      state.contacts.items.push(action.payload);\n    },\n    removeContact(state, action) {\n      const remove = state.contacts.items.filter(\n        contact => contact.name !== action.payload\n      );\n      localStorage.setItem('contacts', JSON.stringify(remove));\n      state.contacts.items = remove;\n    },\n    filterContact(state, action) {\n      state.contacts.filter = action.payload;\n    },\n  },\n});\n\nexport const { addContact } = mySlice.actions;\n\nexport const { removeContact } = mySlice.actions;\n\nexport const { filterContact } = mySlice.actions;\n\nexport const contactValue = state => state.myValue.contacts.items;\n\nexport const filterValue = state => state.myValue.contacts.filter;\n"]},"metadata":{},"sourceType":"module"}